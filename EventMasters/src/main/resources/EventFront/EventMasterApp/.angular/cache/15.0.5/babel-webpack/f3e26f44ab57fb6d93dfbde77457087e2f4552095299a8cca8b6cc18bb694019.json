{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction OrganizeComponent_dl_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"dl\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function OrganizeComponent_dl_23_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onCheckboxChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const w4_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", w4_r1);\n    i0.ɵɵpropertyInterpolate(\"value\", w4_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", w4_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(w4_r1);\n  }\n}\n;\nexport class OrganizeComponent {\n  constructor() {\n    this.signForm = new FormGroup({\n      type_event: new FormControl('', Validators.required),\n      ticket_count: new FormControl('', Validators.required),\n      additional: new FormArray([], [Validators.required])\n    });\n    this.company = ['Catering', 'Ochrona', 'Alkohol'];\n    this.additional = this.signForm.get(\"additional\");\n  }\n  onSubmit() {\n    console.log(this.signForm.value);\n    // const newPro = new Event(\n    // this.signForm.value['type_event'],\n    // this.signForm.value['ticket_count'],\n    // this.signForm.value['additional'])\n    this.signForm.reset();\n  }\n  onCheckboxChange(event) {\n    const additional = this.signForm.controls['additional'];\n    if (event.target.checked) {\n      additional.push(new FormControl(event.target.value));\n    } else {\n      const index = additional.controls.findIndex(x => x.value === event.target.value);\n      additional.removeAt(index);\n    }\n  }\n}\nOrganizeComponent.ɵfac = function OrganizeComponent_Factory(t) {\n  return new (t || OrganizeComponent)();\n};\nOrganizeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrganizeComponent,\n  selectors: [[\"app-organize\"]],\n  decls: 26,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"type_event\"], [\"id\", \"type_event\", \"name\", \"type_event\", \"formControlName\", \"type_event\"], [\"value\", \"masowa\", 1, \"form-control\"], [\"value\", \"prywatna\", 1, \"form-control\"], [\"for\", \"ticket_count\"], [\"type\", \"text\", \"id\", \"ticket_count\", \"formControlName\", \"ticket_count\", \"name\", \"ticket_count\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"additional\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"checkbox\", \"formArrayName\", \"additional\", 3, \"name\", \"value\", \"change\"], [3, \"for\"]],\n  template: function OrganizeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function OrganizeComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Rodzaj imprezy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"select\", 6)(10, \"option\", 7);\n      i0.ɵɵtext(11, \"Masowa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 8);\n      i0.ɵɵtext(13, \"Prywatna\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Podaj liczb\\u0119 dost\\u0119nych bilet\\u00F3w\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\")(18, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Dodatkowe us\\u0142ugi\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵtemplate(23, OrganizeComponent_dl_23_Template, 4, 4, \"dl\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 13);\n      i0.ɵɵtext(25, \"Zg\\u0142o\\u015B\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.signForm);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.company);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.signForm.valid);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i2.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAeA,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAUC,UAAU,QAAQ,gBAAgB;;;;;;;IC2BlFC,0BAAgD;IACiCA;MAAAA;MAAA;MAAA,OAAUA,8CAAwB;IAAA,EAAC;IAAlHA,iBAAmH;IACrHA,iCAAoB;IAAAA,YAAM;IAAAA,iBAAQ;;;;IADkBA,eAAa;IAAbA,uCAAa;IAACA,wCAAc;IACzEA,eAAY;IAAZA,sCAAY;IAACA,eAAM;IAANA,2BAAM;;;AD7ByD;AAO7F,OAAM,MAAOC,iBAAiB;EAL9BC;IAME,aAAQ,GAAG,IAAIJ,SAAS,CAAC;MACvBK,UAAU,EAAE,IAAIN,WAAW,CAAS,EAAE,EAAEE,UAAU,CAACK,QAAQ,CAAC;MAC5DC,YAAY,EAAE,IAAIR,WAAW,CAAS,EAAE,EAAEE,UAAU,CAACK,QAAQ,CAAC;MAC9DE,UAAU,EAAE,IAAIV,SAAS,CAAC,EAAE,EAAE,CAACG,UAAU,CAACK,QAAQ,CAAC;KACpD,CAAC;IACF,YAAO,GAAE,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3C,eAAU,GAAG,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAC,YAAY,CAAc;;EAIzDC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC;IAChC;IACA;IACA;IACA;IAEA,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;EACvB;EAEAC,gBAAgB,CAACC,KAAU;IACzB,MAAMT,UAAU,GAAI,IAAI,CAACC,QAAQ,CAACS,QAAQ,CAAC,YAAY,CAAe;IACtE,IAAID,KAAK,CAACE,MAAM,CAACC,OAAO,EAAE;MACxBZ,UAAU,CAACa,IAAI,CAAC,IAAItB,WAAW,CAACkB,KAAK,CAACE,MAAM,CAACL,KAAK,CAAC,CAAC;KACrD,MAAM;MACL,MAAMQ,KAAK,GAAGd,UAAU,CAACU,QAAQ,CAChCK,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACV,KAAK,KAAKG,KAAK,CAACE,MAAM,CAACL,KAAK,CAAC;MAC/CN,UAAU,CAACiB,QAAQ,CAACH,KAAK,CAAC;;EAE9B;;AA9BWnB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9B5B,8BAAuB;MAGYA;QAAA,OAAY6B,cAAU;MAAA,EAAC;MAClD7B,2BAAK;MAEuBA,8BAAc;MAAAA,iBAAQ;MAAAA,qBAAI;MAClDA,iCAG6B;MACkBA,uBAAM;MAAAA,iBAAS;MAC9DA,kCAAiD;MAAAA,yBAAQ;MAAAA,iBAAS;MAItEA,+BAAwB;MACIA,8DAA8B;MAAAA,iBAAQ;MAAAA,sBAAI;MAQtEA,iBAAM;MACNA,+BAAwB;MACEA,sCAAgB;MAAAA,iBAAQ;MAAAA,sBAAI;MACpDA,mEAGK;MACPA,iBAAM;MAENA,mCAG8B;MAAAA,gCAAK;MAAAA,iBAAS;;;MAlCxCA,eAAsB;MAAtBA,wCAAsB;MAyBLA,gBAAY;MAAZA,qCAAY;MAShCA,eAA4B;MAA5BA,8CAA4B","names":["FormArray","FormControl","FormGroup","Validators","i0","OrganizeComponent","constructor","type_event","required","ticket_count","additional","signForm","get","onSubmit","console","log","value","reset","onCheckboxChange","event","controls","target","checked","push","index","findIndex","x","removeAt","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\ISI2022-2023\\Inżynieria Oprogramowania\\EventMasters\\src\\main\\resources\\EventFront\\EventMasterApp\\src\\app\\organize\\organize.component.ts","D:\\ISI2022-2023\\Inżynieria Oprogramowania\\EventMasters\\src\\main\\resources\\EventFront\\EventMasterApp\\src\\app\\organize\\organize.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { Form, FormArray, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';;\r\n\r\n@Component({\r\n  selector: 'app-organize',\r\n  templateUrl: './organize.component.html',\r\n  styleUrls: ['./organize.component.css']\r\n})\r\nexport class OrganizeComponent {\r\n  signForm = new FormGroup({\r\n    type_event: new FormControl<string>('', Validators.required),\r\n    ticket_count: new FormControl<string>('', Validators.required),\r\n    additional: new FormArray([], [Validators.required]),\r\n  })\r\n  company =['Catering', 'Ochrona', 'Alkohol'];\r\n  additional = this.signForm.get(\"additional\") as FormArray;\r\n\r\n\r\n\r\n  onSubmit(){\r\n    console.log(this.signForm.value);\r\n    // const newPro = new Event(\r\n    // this.signForm.value['type_event'],\r\n    // this.signForm.value['ticket_count'],\r\n    // this.signForm.value['additional'])\r\n\r\n    this.signForm.reset()\r\n  }\r\n\r\n  onCheckboxChange(event: any) {\r\n    const additional = (this.signForm.controls['additional'] as FormArray);\r\n    if (event.target.checked) {\r\n      additional.push(new FormControl(event.target.value));\r\n    } else {\r\n      const index = additional.controls\r\n      .findIndex(x => x.value === event.target.value);\r\n      additional.removeAt(index);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\r\n      <form [formGroup]=\"signForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div>\r\n          <div class=\"form-group\">\r\n            <label for=\"type_event\">Rodzaj imprezy</label><br>\r\n            <select\r\n            id=\"type_event\"\r\n            name=\"type_event\"\r\n            formControlName=\"type_event\">\r\n            <option   class=\"form-control\" value=\"masowa\" >Masowa</option>\r\n            <option   class=\"form-control\" value=\"prywatna\" >Prywatna</option>\r\n          </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"ticket_count\">Podaj liczbę dostęnych biletów</label><br>\r\n          <input\r\n          type=\"text\"\r\n          id=\"ticket_count\"\r\n          class=\"form-control\"\r\n          class=\"form-control\" formControlName=\"ticket_count\"\r\n          name=\"ticket_count\"\r\n          required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"additional\">Dodatkowe usługi</label><br>\r\n          <dl *ngFor=\"let w4 of company; ; let i = index\">\r\n            <input type=\"checkbox\" formArrayName=\"additional\" name=\"{{w4}}\" value=\"{{w4}}\" (change)=\"onCheckboxChange($event)\">\r\n          <label for=\"{{w4}}\">{{w4}}</label>\r\n          </dl>\r\n        </div>\r\n\r\n        <button\r\n        class=\"btn btn-primary\"\r\n         type=\"submit\"\r\n         [disabled]=\"!signForm.valid\">Zgłoś</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}